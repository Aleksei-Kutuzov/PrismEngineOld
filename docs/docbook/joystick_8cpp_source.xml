<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_joystick_8cpp_source" xml:lang="ru">
<title>joystick.cpp</title>
<indexterm><primary>C:/Users/Admin/Desktop/PrismEngine/PrismEngine/src/PRISM_UI/joystick.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_joystick_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;SDL.h&quot;</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;SDL_image.h&quot;</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00005"/>00005 
<anchor xml:id="_joystick_8cpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;Структура&#32;для&#32;хранения&#32;состояния&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00007"/><link linkend="_struct_joystick">00007</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_joystick">Joystick</link>&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00008"/><link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">00008</link> &#32;&#32;&#32;&#32;SDL_Rect&#32;<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>;
<anchor xml:id="_joystick_8cpp_source_1l00009"/><link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">00009</link> &#32;&#32;&#32;&#32;SDL_Rect&#32;<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>;
<anchor xml:id="_joystick_8cpp_source_1l00010"/><link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">00010</link> &#32;&#32;&#32;&#32;SDL_Point&#32;<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>;
<anchor xml:id="_joystick_8cpp_source_1l00011"/><link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>;
<anchor xml:id="_joystick_8cpp_source_1l00012"/><link linkend="_struct_joystick_1ac3c3601fcd3552c6bc353fadd95a0206">00012</link> &#32;&#32;&#32;&#32;SDL_FingerID&#32;<link linkend="_struct_joystick_1ac3c3601fcd3552c6bc353fadd95a0206">fingerId</link>;
<anchor xml:id="_joystick_8cpp_source_1l00013"/><link linkend="_struct_joystick_1a03c996f9fcf0e10baeb3e700be0c409a">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_joystick_1a03c996f9fcf0e10baeb3e700be0c409a">active</link>;
<anchor xml:id="_joystick_8cpp_source_1l00014"/><link linkend="_struct_joystick_1a2bf724f6d43f229ba2699d8e80166a7a">00014</link> &#32;&#32;&#32;&#32;SDL_Texture&#32;*<link linkend="_struct_joystick_1a2bf724f6d43f229ba2699d8e80166a7a">background</link>;
<anchor xml:id="_joystick_8cpp_source_1l00015"/><link linkend="_struct_joystick_1a96168efe46bc9c0d1388031d20a818f0">00015</link> &#32;&#32;&#32;&#32;SDL_Texture&#32;*<link linkend="_struct_joystick_1a96168efe46bc9c0d1388031d20a818f0">image</link>;
<anchor xml:id="_joystick_8cpp_source_1l00016"/>00016 };
<anchor xml:id="_joystick_8cpp_source_1l00017"/>00017 
<anchor xml:id="_joystick_8cpp_source_1l00018"/>00018 <emphasis role="comment">//&#32;Функция&#32;для&#32;загрузки&#32;текстуры&#32;из&#32;файла</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00019"/><link linkend="_joystick_8cpp_1acf5539d8288ea0a8cefe87981aa31b43">00019</link> SDL_Texture*&#32;<link linkend="_joystick_8cpp_1acf5539d8288ea0a8cefe87981aa31b43">loadTexture</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;file,&#32;SDL_Renderer&#32;*renderer)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;SDL_Surface&#32;*surface&#32;=&#32;IMG_Load(file);
<anchor xml:id="_joystick_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!surface)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_Log(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;load&#32;image:&#32;%s&quot;</emphasis>,&#32;IMG_GetError());
<anchor xml:id="_joystick_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;SDL_Texture&#32;*texture&#32;=&#32;SDL_CreateTextureFromSurface(renderer,&#32;surface);
<anchor xml:id="_joystick_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;SDL_FreeSurface(surface);
<anchor xml:id="_joystick_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;texture;
<anchor xml:id="_joystick_8cpp_source_1l00028"/>00028 }
<anchor xml:id="_joystick_8cpp_source_1l00029"/>00029 
<anchor xml:id="_joystick_8cpp_source_1l00030"/>00030 <emphasis role="comment">//&#32;Функция&#32;для&#32;рендеринга&#32;текстуры</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00031"/><link linkend="_button_8h_1a1ab311ff9dab6e1ac74f7fde026bf427">00031</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a1ab311ff9dab6e1ac74f7fde026bf427">renderTexture</link>(SDL_Texture&#32;*tex,&#32;SDL_Renderer&#32;*ren,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;SDL_Rect&#32;dst;
<anchor xml:id="_joystick_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;dst.x&#32;=&#32;x;
<anchor xml:id="_joystick_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;dst.y&#32;=&#32;y;
<anchor xml:id="_joystick_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;dst.w&#32;=&#32;w;
<anchor xml:id="_joystick_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;dst.h&#32;=&#32;h;
<anchor xml:id="_joystick_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;SDL_RenderCopy(ren,&#32;tex,&#32;NULL,&#32;&amp;dst);
<anchor xml:id="_joystick_8cpp_source_1l00038"/>00038 }
<anchor xml:id="_joystick_8cpp_source_1l00039"/>00039 
<anchor xml:id="_joystick_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;Функция&#32;для&#32;инициализации&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00041"/><link linkend="_joystick_8cpp_1a4b2d658e2a5f833b21572512b008c5d1">00041</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a4b2d658e2a5f833b21572512b008c5d1">InitJoystick</link>(<link linkend="_struct_joystick">Joystick</link>&#32;&amp;joystick,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;base_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stick_size,&#32;SDL_Renderer&#32;*renderer)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;SDL_DisplayMode&#32;mode;
<anchor xml:id="_joystick_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;SDL_GetDisplayMode(0,&#32;0,&#32;&amp;mode);
<anchor xml:id="_joystick_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;
<anchor xml:id="_joystick_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;base_size&#32;=&#32;(float)base_size&#32;/&#32;2179.f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)mode.w;
<anchor xml:id="_joystick_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;stick_size&#32;=&#32;(float)stick_size&#32;/&#32;1080.f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)mode.h;
<anchor xml:id="_joystick_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;x&#32;=&#32;(float)x&#32;/&#32;2179.f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)mode.w;
<anchor xml:id="_joystick_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;y&#32;=&#32;(float)y&#32;/&#32;1080.f&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)mode.h;
<anchor xml:id="_joystick_8cpp_source_1l00049"/>00049 
<anchor xml:id="_joystick_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;x&#32;=&#32;(int)x;
<anchor xml:id="_joystick_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;y&#32;=&#32;(int)y;
<anchor xml:id="_joystick_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;base_size&#32;=&#32;(int)base_size;
<anchor xml:id="_joystick_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;stick_size&#32;=&#32;(int)stick_size;
<anchor xml:id="_joystick_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;
<anchor xml:id="_joystick_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>&#32;=&#32;{x&#32;-&#32;base_size&#32;/&#32;2,&#32;y&#32;-&#32;base_size&#32;/&#32;2,&#32;base_size,&#32;base_size};
<anchor xml:id="_joystick_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>&#32;=&#32;{x&#32;-&#32;stick_size&#32;/&#32;2,&#32;y&#32;-&#32;stick_size&#32;/&#32;2,&#32;stick_size,&#32;stick_size};
<anchor xml:id="_joystick_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>&#32;=&#32;{x,&#32;y};
<anchor xml:id="_joystick_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>&#32;=&#32;base_size&#32;/&#32;2&#32;-&#32;stick_size&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1a03c996f9fcf0e10baeb3e700be0c409a">active</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1a2bf724f6d43f229ba2699d8e80166a7a">background</link>&#32;=&#32;<link linkend="_joystick_8cpp_1acf5539d8288ea0a8cefe87981aa31b43">loadTexture</link>(<emphasis role="stringliteral">&quot;Circle&#32;Joystick/subpacks/Type1/textures/ui/joystick_frame.png&quot;</emphasis>,&#32;renderer);
<anchor xml:id="_joystick_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1a96168efe46bc9c0d1388031d20a818f0">image</link>&#32;=&#32;<link linkend="_joystick_8cpp_1acf5539d8288ea0a8cefe87981aa31b43">loadTexture</link>(<emphasis role="stringliteral">&quot;Circle&#32;Joystick/subpacks/Type1/textures/ui/joystick_knob.png&quot;</emphasis>,&#32;renderer);
<anchor xml:id="_joystick_8cpp_source_1l00062"/>00062 }
<anchor xml:id="_joystick_8cpp_source_1l00063"/>00063 
<anchor xml:id="_joystick_8cpp_source_1l00064"/>00064 <emphasis role="comment">//&#32;Функция&#32;для&#32;получения&#32;нормализованных&#32;координат&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00065"/><link linkend="_joystick_8cpp_1a7534f3c6e672027f7dd62624e1859cfd">00065</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a7534f3c6e672027f7dd62624e1859cfd">GetJoystickPosition</link>(<link linkend="_struct_joystick">Joystick</link>&#32;&amp;joystick,&#32;<emphasis role="keywordtype">float</emphasis>&#32;&amp;norm_x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;&amp;norm_y)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dx&#32;=&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.x&#32;+&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.w&#32;/&#32;2&#32;-&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.x;
<anchor xml:id="_joystick_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dy&#32;=&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.y&#32;+&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.h&#32;/&#32;2&#32;-&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.y;
<anchor xml:id="_joystick_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;norm_x&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(dx)&#32;/&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>;
<anchor xml:id="_joystick_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;norm_y&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(dy)&#32;/&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>;
<anchor xml:id="_joystick_8cpp_source_1l00070"/>00070 }
<anchor xml:id="_joystick_8cpp_source_1l00071"/>00071 
<anchor xml:id="_joystick_8cpp_source_1l00072"/>00072 
<anchor xml:id="_joystick_8cpp_source_1l00073"/>00073 <emphasis role="comment">//&#32;Функция&#32;для&#32;обновления&#32;состояния&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00074"/><link linkend="_joystick_8cpp_1a0e0547a969ffec6e4bf52581a1083df7">00074</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a0e0547a969ffec6e4bf52581a1083df7">UpdateJoystick</link>(<link linkend="_struct_joystick">Joystick</link>&#32;&amp;joystick,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dx&#32;=&#32;x&#32;-&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.x;
<anchor xml:id="_joystick_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dy&#32;=&#32;y&#32;-&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.y;
<anchor xml:id="_joystick_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distance&#32;=&#32;std::sqrt(dx&#32;*&#32;dx&#32;+&#32;dy&#32;*&#32;dy);
<anchor xml:id="_joystick_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;
<anchor xml:id="_joystick_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(distance&#32;&lt;&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.x&#32;=&#32;x&#32;-&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.w&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.y&#32;=&#32;y&#32;-&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.h&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;std::atan2(dy,&#32;dx);
<anchor xml:id="_joystick_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.x&#32;=&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.x&#32;+&#32;std::cos(angle)&#32;*&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>&#32;-&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.w&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.y&#32;=&#32;joystick.<link linkend="_struct_joystick_1a04384f7c07a675481d0e4253c7e9966a">center</link>.y&#32;+&#32;std::sin(angle)&#32;*&#32;joystick.<link linkend="_struct_joystick_1ab2de5ae9f4869dec282654f50e84681b">max_distance</link>&#32;-&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.h&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00087"/>00087 }
<anchor xml:id="_joystick_8cpp_source_1l00088"/>00088 
<anchor xml:id="_joystick_8cpp_source_1l00089"/>00089 <emphasis role="comment">//&#32;Функция&#32;для&#32;обработки&#32;ввода</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00090"/><link linkend="_joystick_8cpp_1a9109c20080d8804029bd7b78607e5684">00090</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a9109c20080d8804029bd7b78607e5684">HandleInput</link>(SDL_Event&#32;&amp;e,&#32;std::vector&lt;Joystick&gt;&#32;&amp;joysticks,&#32;<emphasis role="keywordtype">int</emphasis>&#32;window_width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;window_height)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(e.type)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SDL_FINGERDOWN:&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_Point&#32;touch_point&#32;=&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(e.tfinger.x&#32;*&#32;window_width),
<anchor xml:id="_joystick_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(e.tfinger.y&#32;*&#32;window_height)
<anchor xml:id="_joystick_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_joystick_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Поиск&#32;неактивного&#32;джойстика&#32;для&#32;активации</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;joystick&#32;:&#32;joysticks)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!joystick.active&#32;&amp;&amp;&#32;SDL_PointInRect(&amp;touch_point,&#32;&amp;joystick.base_rect))&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.active&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.fingerId&#32;=&#32;e.tfinger.fingerId;
<anchor xml:id="_joystick_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_joystick_8cpp_1a0e0547a969ffec6e4bf52581a1083df7">UpdateJoystick</link>(joystick,&#32;touch_point.x,&#32;touch_point.y);
<anchor xml:id="_joystick_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SDL_FINGERUP:
<anchor xml:id="_joystick_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Поиск&#32;активного&#32;джойстика&#32;для&#32;деактивации</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;joystick&#32;:&#32;joysticks)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(joystick.active&#32;&amp;&amp;&#32;e.tfinger.fingerId&#32;==&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;Проверка&#32;fingerId&#32;может&#32;варьироваться</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.active&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.stick_rect.x&#32;=&#32;joystick.center.x&#32;-&#32;joystick.stick_rect.w&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joystick.stick_rect.y&#32;=&#32;joystick.center.y&#32;-&#32;joystick.stick_rect.h&#32;/&#32;2;
<anchor xml:id="_joystick_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SDL_FINGERMOTION:
<anchor xml:id="_joystick_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Обновление&#32;позиции&#32;активного&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_Point&#32;touch_point&#32;=&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(e.tfinger.x&#32;*&#32;window_width),
<anchor xml:id="_joystick_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(e.tfinger.y&#32;*&#32;window_height)
<anchor xml:id="_joystick_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_joystick_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;joystick&#32;:&#32;joysticks)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(joystick.active)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_joystick_8cpp_1a0e0547a969ffec6e4bf52581a1083df7">UpdateJoystick</link>(joystick,&#32;touch_point.x,&#32;touch_point.y);
<anchor xml:id="_joystick_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;<emphasis role="comment">//&#32;Обработка&#32;только&#32;одного&#32;активного&#32;джойстика&#32;на&#32;данный&#32;момент</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_joystick_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;}
<anchor xml:id="_joystick_8cpp_source_1l00133"/>00133 }
<anchor xml:id="_joystick_8cpp_source_1l00134"/>00134 
<anchor xml:id="_joystick_8cpp_source_1l00135"/>00135 <emphasis role="comment">//&#32;Функция&#32;для&#32;рендеринга&#32;джойстика</emphasis>
<anchor xml:id="_joystick_8cpp_source_1l00136"/><link linkend="_joystick_8cpp_1a6ac973c9890e1d44508a8c00a582cd01">00136</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_joystick_8cpp_1a6ac973c9890e1d44508a8c00a582cd01">RenderJoystick</link>(SDL_Renderer&#32;*renderer,&#32;<link linkend="_struct_joystick">Joystick</link>&#32;&amp;joystick)&#32;{
<anchor xml:id="_joystick_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<link linkend="_joystick_8cpp_1a1ab311ff9dab6e1ac74f7fde026bf427">renderTexture</link>(joystick.<link linkend="_struct_joystick_1a2bf724f6d43f229ba2699d8e80166a7a">background</link>,&#32;renderer,&#32;joystick.<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>.x,&#32;joystick.<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>.y,&#32;joystick.<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>.w,&#32;joystick.<link linkend="_struct_joystick_1aaaba59bc9f2578a08bd19198efdfee6b">base_rect</link>.h);
<anchor xml:id="_joystick_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<link linkend="_joystick_8cpp_1a1ab311ff9dab6e1ac74f7fde026bf427">renderTexture</link>(joystick.<link linkend="_struct_joystick_1a96168efe46bc9c0d1388031d20a818f0">image</link>,&#32;renderer,&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.x,&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.y,&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.w,&#32;joystick.<link linkend="_struct_joystick_1aa0e6430ec216a5fbf19125bb0b09ac64">stick_rect</link>.h);
<anchor xml:id="_joystick_8cpp_source_1l00139"/>00139 }
</programlisting></section>
