<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_shader_manager_8cpp_source" xml:lang="ru">
<title>shaderManager.cpp</title>
<indexterm><primary>C:/Users/Admin/Desktop/PrismEngine/PrismEngine/src/PRISM_rendering/shaderManager.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_shader_manager_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_shader_manager_8h">shaderManager.h</link>&quot;</emphasis>
<anchor xml:id="_shader_manager_8cpp_source_1l00002"/>00002 
<anchor xml:id="_shader_manager_8cpp_source_1l00003"/>00003 
<anchor xml:id="_shader_manager_8cpp_source_1l00004"/><link linkend="_classshader_manager_1a73ff9c5ffc92898686777b73cc4ba8a9">00004</link> GLuint&#32;<link linkend="_classshader_manager_1a73ff9c5ffc92898686777b73cc4ba8a9">shaderManager::compileShader</link>(GLenum&#32;type,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;source)&#32;{
<anchor xml:id="_shader_manager_8cpp_source_1l00005"/>00005 &#32;&#32;&#32;&#32;GLuint&#32;shader&#32;=&#32;glCreateShader(type);
<anchor xml:id="_shader_manager_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;glShaderSource(shader,&#32;1,&#32;&amp;source,&#32;<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="_shader_manager_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;glCompileShader(shader);
<anchor xml:id="_shader_manager_8cpp_source_1l00008"/>00008 
<anchor xml:id="_shader_manager_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;GLint&#32;success;
<anchor xml:id="_shader_manager_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;glGetShaderiv(shader,&#32;GL_COMPILE_STATUS,&#32;&amp;success);
<anchor xml:id="_shader_manager_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!success)&#32;{
<anchor xml:id="_shader_manager_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;infoLog[512];
<anchor xml:id="_shader_manager_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glGetShaderInfoLog(shader,&#32;512,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;infoLog);
<anchor xml:id="_shader_manager_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_Log(<emphasis role="stringliteral">&quot;Shader&#32;Compilation&#32;Error:&#32;&quot;</emphasis>,&#32;infoLog);
<anchor xml:id="_shader_manager_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="_shader_manager_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;shader;
<anchor xml:id="_shader_manager_8cpp_source_1l00017"/>00017 }
</programlisting></section>
