<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__abstract_camera3_d_8cpp_source" xml:lang="ru">
<title>AbstractCamera3D.cpp</title>
<indexterm><primary>C:/Users/Admin/Desktop/PrismEngine/PrismEngine/src/PRISM_objects3D/AbstractCamera3D.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="__abstract_camera3_d_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__abstract_camera3_d_8h">AbstractCamera3D.h</link>&quot;</emphasis>
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00002"/>00002 
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00003"/>00003 
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00004"/><link linkend="_class_abstract_camera3_d_1a435bace0178916d3bb71558762a08d15">00004</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_abstract_camera3_d_1a435bace0178916d3bb71558762a08d15">AbstractCamera3D::SetPosition</link>(<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;Coord,&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;Rot,&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;viewDir_)&#32;{
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>&#32;=&#32;viewDir_;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<link linkend="_struct_p_r_i_s_m___matrix__4_x4">PRISM_Matrix_4X4</link>&#32;matRX&#32;=&#32;<link linkend="_class_math_1a751e8ee04fa36ec2a7c2cf65388db388">Math::Matrix_MakeRotationX</link>(Rot.<link linkend="_struct_p_r_i_s_m___vector3d_1ad0da36b2558901e21e7a30f6c227a45e">x</link>);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<link linkend="_struct_p_r_i_s_m___matrix__4_x4">PRISM_Matrix_4X4</link>&#32;matRY&#32;=&#32;<link linkend="_class_math_1a6e4af6c5bcd41db2091def1a8dd24197">Math::Matrix_MakeRotationY</link>(Rot.<link linkend="_struct_p_r_i_s_m___vector3d_1aa4f0d3eebc3c443f9be81bf48561a217">y</link>);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<link linkend="_struct_p_r_i_s_m___matrix__4_x4">PRISM_Matrix_4X4</link>&#32;matRZ&#32;=&#32;<link linkend="_class_math_1a2b159f7588ac3cbca1fba25ccb72cda3">Math::Matrix_MakeRotationZ</link>(Rot.<link linkend="_struct_p_r_i_s_m___vector3d_1af73583b1e980b0aa03f9884812e9fd4d">z</link>);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00009"/>00009 
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<link linkend="_class_math_1a65e451891ac1c4959ea5c8ade0a2724b">Math::MultiplyMatrixVector</link>(<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;matRX);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<link linkend="_class_math_1a65e451891ac1c4959ea5c8ade0a2724b">Math::MultiplyMatrixVector</link>(<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;matRY);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="_class_math_1a65e451891ac1c4959ea5c8ade0a2724b">Math::MultiplyMatrixVector</link>(<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;matRZ);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1ae2a63d044e2f5ebcacde18dd6edf8ef1">Coordinate</link>&#32;=&#32;Coord;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1accfed9da2d822544527e3a911ff58616">Rotation</link>&#32;=&#32;Rot;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1acf3f21598b2dbf6ec37b88f6b084f553">SetView</link>(<link linkend="_class_abstract_camera3_d_1a881a5db3026f58e17e34bac9e9404a13">viewDir</link>,&#32;{0,&#32;1,&#32;0});
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00019"/>00019 }
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00020"/>00020 
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00021"/><link linkend="_class_abstract_camera3_d_1acf3f21598b2dbf6ec37b88f6b084f553">00021</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_abstract_camera3_d_1acf3f21598b2dbf6ec37b88f6b084f553">AbstractCamera3D::SetView</link>(<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;viewDirVect,&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;upDirVect)&#32;{
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_p_r_i_s_m___vector3d">PRISM_Vector3d</link>&#32;viewDirTarget&#32;=&#32;<link linkend="_class_abstract_camera3_d_1ae2a63d044e2f5ebcacde18dd6edf8ef1">Coordinate</link>&#32;+&#32;viewDirVect;
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<link linkend="_struct_p_r_i_s_m___matrix__4_x4">PRISM_Matrix_4X4</link>&#32;matrixCamera&#32;=&#32;<link linkend="_class_math_1a5d9b6ed723de18358738269a586cbc53">Math::Matrix_PointAt</link>(<link linkend="_class_abstract_camera3_d_1ae2a63d044e2f5ebcacde18dd6edf8ef1">Coordinate</link>,&#32;viewDirTarget,&#32;upDirVect);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1a78893ed559b88e8c695cd9d39b5daabb">matrixView</link>&#32;=&#32;<link linkend="_class_math_1a74d6af6b7e2a2b8601cf18638f8dc546">Math::Matrix_QuickInverse</link>(matrixCamera);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00025"/>00025 }
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00026"/>00026 
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00027"/><link linkend="_class_abstract_camera3_d_1a06aa32cc3a78b9563118d238cc71e6a0">00027</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_abstract_camera3_d_1a06aa32cc3a78b9563118d238cc71e6a0">AbstractCamera3D::ClearZ_Buffer</link>(SDL_Renderer&#32;*&#32;renderer)&#32;{
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<link linkend="_class_abstract_camera3_d_1a677e3ddf31ae2b610ab15bff581832c9">z_buffer</link>.clear(renderer);
<anchor xml:id="__abstract_camera3_d_8cpp_source_1l00029"/>00029 }
</programlisting></section>
